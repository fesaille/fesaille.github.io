<script src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>
<script>
(function() {
  function addWidgetsRenderer() {
    var mimeElement = document.querySelector('script[type="application/vnd.jupyter.widget-view+json"]');
    var scriptElement = document.createElement('script');
    var widgetRendererSrc = 'https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js';
    var widgetState;

    // Fallback for older version:
    try {
      widgetState = mimeElement && JSON.parse(mimeElement.innerHTML);

      if (widgetState && (widgetState.version_major < 2 || !widgetState.version_major)) {
        widgetRendererSrc = 'jupyter-js-widgets@*/dist/embed.js';
      }
    } catch(e) {}

    scriptElement.src = widgetRendererSrc;
    document.body.appendChild(scriptElement);
  }

  document.addEventListener('DOMContentLoaded', addWidgetsRenderer);
}());
</script>

<div class="cell border-box-sizing text_cell rendered" markdown="1">
<div class="inner_cell" markdown="1">
<div class="text_cell_render border-box-sizing rendered_html" markdown="1">
# Initialisation
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered" markdown="1">
<div class="input">

```python
import ibis

uri = "postgresql+psycopg2://postgres:postgres@db.postgres.app.com/postgres"
```

</div>

</div>
<div class="cell border-box-sizing code_cell rendered" markdown="1">
<div class="input">

```python
con = ibis.postgres.connect(url=uri)
```

</div>

</div>
<div class="cell border-box-sizing code_cell rendered" markdown="1">
<div class="input">

```python
con.list_tables()
```

</div>

<div class="output_wrapper" markdown="1">
<div class="output" markdown="1">


<div class="output_area" markdown="1">


<div class="output_text output_subarea output_execute_result">
<pre>[&#39;country&#39;]</pre>
</div>

</div>

</div>
</div>

</div>
<div class="cell border-box-sizing code_cell rendered" markdown="1">
<div class="input">

```python
ibis.options
```

</div>

<div class="output_wrapper" markdown="1">
<div class="output" markdown="1">


<div class="output_area" markdown="1">


<div class="output_text output_subarea output_execute_result">
<pre>{&#39;bigquery&#39;: {&#39;partition_col&#39;: &#39;PARTITIONTIME&#39;},
 &#39;clickhouse&#39;: {&#39;temp_db&#39;: &#39;__ibis_tmp&#39;},
 &#39;default_backend&#39;: None,
 &#39;graphviz_repr&#39;: True,
 &#39;impala&#39;: {&#39;temp_db&#39;: &#39;__ibis_tmp&#39;, &#39;temp_hdfs_path&#39;: &#39;/tmp/ibis&#39;},
 &#39;interactive&#39;: False,
 &#39;sql&#39;: {&#39;default_limit&#39;: 10000},
 &#39;verbose&#39;: False,
 &#39;verbose_log&#39;: None}</pre>
</div>

</div>

</div>
</div>

</div>
<div class="cell border-box-sizing code_cell rendered" markdown="1">
<div class="input">

```python
ibis.options.interactive = False
```

</div>

</div>
<div class="cell border-box-sizing code_cell rendered" markdown="1">
<div class="input">

```python
sql = lambda proj : print(ibis.postgres.compile(proj))
```

</div>

</div>
<div class="cell border-box-sizing text_cell rendered" markdown="1">
<div class="inner_cell" markdown="1">
<div class="text_cell_render border-box-sizing rendered_html" markdown="1">
# Table operations
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered" markdown="1">
<div class="input">

```python
t = con.table("accounts")
```

</div>

</div>
<div class="cell border-box-sizing code_cell rendered" markdown="1">
<div class="input">

```python
sql(t.head(10))
```

</div>

<div class="output_wrapper" markdown="1">
<div class="output" markdown="1">


<div class="output_area" markdown="1">
<div class="output_subarea output_stream output_stdout output_text">
<pre>SELECT t0.id, t0.names, t0.amount 
FROM accounts AS t0 
 LIMIT %(param_1)s
</pre>
</div>
</div>

</div>
</div>

</div>
<div class="cell border-box-sizing code_cell rendered" markdown="1">
<div class="input">

```python
t.head().execute()
```

</div>

<div class="output_wrapper" markdown="1">
<div class="output" markdown="1">


<div class="output_area" markdown="1">

<div class="output_html rendered_html output_subarea output_execute_result">
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>id</th>
      <th>names</th>
      <th>amount</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>59</td>
      <td>Tim</td>
      <td>-330</td>
    </tr>
    <tr>
      <th>1</th>
      <td>43</td>
      <td>Yvonne</td>
      <td>2731</td>
    </tr>
    <tr>
      <th>2</th>
      <td>58</td>
      <td>Hannah</td>
      <td>888</td>
    </tr>
    <tr>
      <th>3</th>
      <td>65</td>
      <td>Wendy</td>
      <td>1670</td>
    </tr>
    <tr>
      <th>4</th>
      <td>82</td>
      <td>Zelda</td>
      <td>-1114</td>
    </tr>
  </tbody>
</table>
</div>
</div>

</div>

</div>
</div>

</div>
<div class="cell border-box-sizing code_cell rendered" markdown="1">
<div class="input">

```python
t.namesdistinct()

```

</div>

<div class="output_wrapper" markdown="1">
<div class="output" markdown="1">


<div class="output_area" markdown="1">


<div class="output_text output_subarea output_execute_result">
<pre>ref_0
PostgreSQLTable[table]
  name: accounts
  schema:
    id : int32
    names : string
    amount : int64

names = Column[string*] &#39;names&#39; from table
  ref_0</pre>
</div>

</div>

</div>
</div>

</div>
<div class="cell border-box-sizing code_cell rendered" markdown="1">
<div class="input">

```python
t.mutate(new=t.names).execute()
```

</div>

<div class="output_wrapper" markdown="1">
<div class="output" markdown="1">


<div class="output_area" markdown="1">

<div class="output_html rendered_html output_subarea output_execute_result">
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>id</th>
      <th>names</th>
      <th>amount</th>
      <th>new</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>59</td>
      <td>Tim</td>
      <td>-330</td>
      <td>Tim</td>
    </tr>
    <tr>
      <th>1</th>
      <td>43</td>
      <td>Yvonne</td>
      <td>2731</td>
      <td>Yvonne</td>
    </tr>
    <tr>
      <th>2</th>
      <td>58</td>
      <td>Hannah</td>
      <td>888</td>
      <td>Hannah</td>
    </tr>
    <tr>
      <th>3</th>
      <td>65</td>
      <td>Wendy</td>
      <td>1670</td>
      <td>Wendy</td>
    </tr>
    <tr>
      <th>4</th>
      <td>82</td>
      <td>Zelda</td>
      <td>-1114</td>
      <td>Zelda</td>
    </tr>
    <tr>
      <th>5</th>
      <td>-108</td>
      <td>Ray</td>
      <td>2221</td>
      <td>Ray</td>
    </tr>
    <tr>
      <th>6</th>
      <td>122</td>
      <td>Victor</td>
      <td>1068</td>
      <td>Victor</td>
    </tr>
    <tr>
      <th>7</th>
      <td>96</td>
      <td>Charlie</td>
      <td>373</td>
      <td>Charlie</td>
    </tr>
    <tr>
      <th>8</th>
      <td>2</td>
      <td>Ray</td>
      <td>45</td>
      <td>Ray</td>
    </tr>
    <tr>
      <th>9</th>
      <td>-85</td>
      <td>Ingrid</td>
      <td>1684</td>
      <td>Ingrid</td>
    </tr>
    <tr>
      <th>10</th>
      <td>104</td>
      <td>Yvonne</td>
      <td>454</td>
      <td>Yvonne</td>
    </tr>
    <tr>
      <th>11</th>
      <td>28</td>
      <td>Quinn</td>
      <td>559</td>
      <td>Quinn</td>
    </tr>
    <tr>
      <th>12</th>
      <td>-84</td>
      <td>Hannah</td>
      <td>583</td>
      <td>Hannah</td>
    </tr>
    <tr>
      <th>13</th>
      <td>-104</td>
      <td>Tim</td>
      <td>0</td>
      <td>Tim</td>
    </tr>
    <tr>
      <th>14</th>
      <td>-72</td>
      <td>Ray</td>
      <td>1836</td>
      <td>Ray</td>
    </tr>
    <tr>
      <th>15</th>
      <td>87</td>
      <td>Jerry</td>
      <td>-16</td>
      <td>Jerry</td>
    </tr>
    <tr>
      <th>16</th>
      <td>71</td>
      <td>George</td>
      <td>50</td>
      <td>George</td>
    </tr>
    <tr>
      <th>17</th>
      <td>-61</td>
      <td>Patricia</td>
      <td>675</td>
      <td>Patricia</td>
    </tr>
    <tr>
      <th>18</th>
      <td>94</td>
      <td>Yvonne</td>
      <td>1581</td>
      <td>Yvonne</td>
    </tr>
    <tr>
      <th>19</th>
      <td>94</td>
      <td>Laura</td>
      <td>669</td>
      <td>Laura</td>
    </tr>
    <tr>
      <th>20</th>
      <td>-39</td>
      <td>Quinn</td>
      <td>1938</td>
      <td>Quinn</td>
    </tr>
    <tr>
      <th>21</th>
      <td>-9</td>
      <td>Frank</td>
      <td>117</td>
      <td>Frank</td>
    </tr>
    <tr>
      <th>22</th>
      <td>-24</td>
      <td>Ursula</td>
      <td>479</td>
      <td>Ursula</td>
    </tr>
    <tr>
      <th>23</th>
      <td>110</td>
      <td>Xavier</td>
      <td>24</td>
      <td>Xavier</td>
    </tr>
    <tr>
      <th>24</th>
      <td>72</td>
      <td>Laura</td>
      <td>3620</td>
      <td>Laura</td>
    </tr>
    <tr>
      <th>25</th>
      <td>85</td>
      <td>Kevin</td>
      <td>274</td>
      <td>Kevin</td>
    </tr>
    <tr>
      <th>26</th>
      <td>25</td>
      <td>Edith</td>
      <td>125</td>
      <td>Edith</td>
    </tr>
    <tr>
      <th>27</th>
      <td>28</td>
      <td>Quinn</td>
      <td>606</td>
      <td>Quinn</td>
    </tr>
    <tr>
      <th>28</th>
      <td>-56</td>
      <td>Charlie</td>
      <td>1565</td>
      <td>Charlie</td>
    </tr>
    <tr>
      <th>29</th>
      <td>-120</td>
      <td>Dan</td>
      <td>1560</td>
      <td>Dan</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>9970</th>
      <td>-99</td>
      <td>Sarah</td>
      <td>988</td>
      <td>Sarah</td>
    </tr>
    <tr>
      <th>9971</th>
      <td>-116</td>
      <td>Jerry</td>
      <td>734</td>
      <td>Jerry</td>
    </tr>
    <tr>
      <th>9972</th>
      <td>50</td>
      <td>Quinn</td>
      <td>1824</td>
      <td>Quinn</td>
    </tr>
    <tr>
      <th>9973</th>
      <td>25</td>
      <td>Edith</td>
      <td>126</td>
      <td>Edith</td>
    </tr>
    <tr>
      <th>9974</th>
      <td>-56</td>
      <td>Charlie</td>
      <td>1754</td>
      <td>Charlie</td>
    </tr>
    <tr>
      <th>9975</th>
      <td>-77</td>
      <td>Patricia</td>
      <td>73</td>
      <td>Patricia</td>
    </tr>
    <tr>
      <th>9976</th>
      <td>-36</td>
      <td>Ursula</td>
      <td>43</td>
      <td>Ursula</td>
    </tr>
    <tr>
      <th>9977</th>
      <td>-14</td>
      <td>Sarah</td>
      <td>-1</td>
      <td>Sarah</td>
    </tr>
    <tr>
      <th>9978</th>
      <td>14</td>
      <td>Laura</td>
      <td>4770</td>
      <td>Laura</td>
    </tr>
    <tr>
      <th>9979</th>
      <td>-66</td>
      <td>George</td>
      <td>32</td>
      <td>George</td>
    </tr>
    <tr>
      <th>9980</th>
      <td>60</td>
      <td>Ursula</td>
      <td>967</td>
      <td>Ursula</td>
    </tr>
    <tr>
      <th>9981</th>
      <td>-66</td>
      <td>George</td>
      <td>38</td>
      <td>George</td>
    </tr>
    <tr>
      <th>9982</th>
      <td>-91</td>
      <td>Patricia</td>
      <td>188</td>
      <td>Patricia</td>
    </tr>
    <tr>
      <th>9983</th>
      <td>-112</td>
      <td>Alice</td>
      <td>-333</td>
      <td>Alice</td>
    </tr>
    <tr>
      <th>9984</th>
      <td>96</td>
      <td>Charlie</td>
      <td>823</td>
      <td>Charlie</td>
    </tr>
    <tr>
      <th>9985</th>
      <td>17</td>
      <td>Victor</td>
      <td>269</td>
      <td>Victor</td>
    </tr>
    <tr>
      <th>9986</th>
      <td>16</td>
      <td>Victor</td>
      <td>232</td>
      <td>Victor</td>
    </tr>
    <tr>
      <th>9987</th>
      <td>83</td>
      <td>Michael</td>
      <td>3144</td>
      <td>Michael</td>
    </tr>
    <tr>
      <th>9988</th>
      <td>82</td>
      <td>Ursula</td>
      <td>3251</td>
      <td>Ursula</td>
    </tr>
    <tr>
      <th>9989</th>
      <td>54</td>
      <td>Norbert</td>
      <td>63</td>
      <td>Norbert</td>
    </tr>
    <tr>
      <th>9990</th>
      <td>-55</td>
      <td>Zelda</td>
      <td>893</td>
      <td>Zelda</td>
    </tr>
    <tr>
      <th>9991</th>
      <td>35</td>
      <td>Patricia</td>
      <td>-23</td>
      <td>Patricia</td>
    </tr>
    <tr>
      <th>9992</th>
      <td>66</td>
      <td>Ray</td>
      <td>3333</td>
      <td>Ray</td>
    </tr>
    <tr>
      <th>9993</th>
      <td>42</td>
      <td>George</td>
      <td>-481</td>
      <td>George</td>
    </tr>
    <tr>
      <th>9994</th>
      <td>111</td>
      <td>Xavier</td>
      <td>3164</td>
      <td>Xavier</td>
    </tr>
    <tr>
      <th>9995</th>
      <td>-41</td>
      <td>Oliver</td>
      <td>26082</td>
      <td>Oliver</td>
    </tr>
    <tr>
      <th>9996</th>
      <td>96</td>
      <td>Wendy</td>
      <td>-6534</td>
      <td>Wendy</td>
    </tr>
    <tr>
      <th>9997</th>
      <td>96</td>
      <td>Charlie</td>
      <td>1014</td>
      <td>Charlie</td>
    </tr>
    <tr>
      <th>9998</th>
      <td>22</td>
      <td>George</td>
      <td>2196</td>
      <td>George</td>
    </tr>
    <tr>
      <th>9999</th>
      <td>-2</td>
      <td>Xavier</td>
      <td>112</td>
      <td>Xavier</td>
    </tr>
  </tbody>
</table>
<p>10000 rows × 4 columns</p>
</div>
</div>

</div>

</div>
</div>

</div>
<div class="cell border-box-sizing code_cell rendered" markdown="1">
<div class="input">

```python
t.head().execute()
```

</div>

<div class="output_wrapper" markdown="1">
<div class="output" markdown="1">


<div class="output_area" markdown="1">

<div class="output_html rendered_html output_subarea output_execute_result">
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>id</th>
      <th>names</th>
      <th>amount</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>-57</td>
      <td>Xavier</td>
      <td>251</td>
    </tr>
    <tr>
      <th>1</th>
      <td>-113</td>
      <td>Michael</td>
      <td>1082</td>
    </tr>
    <tr>
      <th>2</th>
      <td>45</td>
      <td>Michael</td>
      <td>1642</td>
    </tr>
    <tr>
      <th>3</th>
      <td>-61</td>
      <td>Patricia</td>
      <td>583</td>
    </tr>
    <tr>
      <th>4</th>
      <td>-89</td>
      <td>Frank</td>
      <td>445</td>
    </tr>
  </tbody>
</table>
</div>
</div>

</div>

</div>
</div>

</div>
<div class="cell border-box-sizing text_cell rendered" markdown="1">
<div class="inner_cell" markdown="1">
<div class="text_cell_render border-box-sizing rendered_html" markdown="1">
# Type

Ibis uses its own type aliases that map onto database types. See, for
example, the correspondence between Ibis type names and Impala type names:

```
Ibis type      Impala Type
~~~~~~~~~      ~~~~~~~~~~~
int8           TINYINT
int16          SMALLINT
int32          INT
int64          BIGINT
float          FLOAT
double         DOUBLE
boolean        BOOLEAN
string         STRING
timestamp      TIMESTAMP
decimal(p, s)  DECIMAL(p,s)
interval(u)    INTERVAL(u)
```
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered" markdown="1">
<div class="input">

```python

```

</div>

</div>


